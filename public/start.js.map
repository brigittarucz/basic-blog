{"version":3,"file":"start.js","sourceRoot":"","sources":["../client/start.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAE/B,CAAC,KAAK,IAAI,EAAE;IACR,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACvD,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAClC,CAAC,CAAC,EAAE,CAAC;AAEL,MAAM,UAAU,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAE9D,MAAM,YAAY,GAAG;IACjB,aAAa,EAAE,iBAAiB;IAChC,YAAY,EAAE,uBAAuB;IACrC,QAAQ,EAAE,YAAY;IACtB,UAAU,EAAE,cAAc;IAC1B,QAAQ,EAAE,YAAY;IACtB,eAAe,EAAE,oBAAoB;CACxC,CAAC;AAOF,eAAe;AACf,MAAM,QAAQ,GAAG,CAAC,UAAkB,EAAE,KAAa,EAAE,EAAe,EAAE,EAAE,CACpE,UAAU,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAEvD,MAAM,WAAW,GAAG,CAAC,UAAkB,EAAE,KAAa,EAAE,EAAe,EAAE,EAAE,CACvE,UAAU,CAAC,UAAU,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAE1D,MAAM,UAAU,GAAG;IACf,MAAM,SAAS,GAAG,GAAG,EAAE;QACnB,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QACzD,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,GAAG,EAAE;QACvB,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAC5D,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEF,OAAO;QACH,SAAS;QACT,aAAa;KAChB,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,QAAQ,GAAG,GAAG,EAAE;IAClB,IAAI,KAAK,GAAG;QACR,IAAI,EAAE,EAAE;QACR,OAAO,EAAE,EAAE;KACd,CAAC;IAEF,OAAO;QACH,qDAAqD;QACrD,IAAI,KAAK;YACL,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,QAAQ,EAAE,CAAC,OAAa,EAAE,EAAE;YACxB,KAAK,qBAAQ,OAAO,CAAE,CAAC;QAC3B,CAAC;KACJ,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,SAAS,GAAG,QAAQ,EAAE,CAAC;AAE7B,MAAM,cAAc,GAAG,CAAC,CAAa,EAAE,EAAE;IACrC,MAAM,OAAO,GAAS;QAClB,IAAI,EAAE,MAAM,CAAE,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC;QAClD,OAAO,EAAE,EAAE;KACd,CAAC;IAEF,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5B,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACrE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,CAAQ,EAAE,EAAE;IAC9B,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAkB,CAAC,CAAC,MAAM,CAAC,CAAC;IACrD,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAEnD,IAAI,aAAa,GAAG,EAAE,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;QACnE,OAAO;KACV;IAED,UAAU,EAAE,CAAC;AACjB,CAAC,CAAC;AAEF,SAAS,UAAU;IACf,MAAM,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC,aAAa,CAAgB,CAAC;IAExE,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC3B,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;KAC5B;IAED,SAAS,CAAC,KAAK,CAAC,mBAAmB,GAAG,UAAU,SAAS,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC;IAC7E,SAAS,CAAC,KAAK,CAAC,gBAAgB,GAAG,UAAU,SAAS,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC;IAE1E,MAAM,QAAQ,GAAG,UAAU,CACvB,YAAY,CAAC,YAAY,CACL,CAAC;IAEzB,IAAI,WAAW,GAAG,EAAE,CAAC;IAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACxD,MAAM,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEtD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;YACV,CACS,YAAa,CAAC,aAAa,CAC7C,cAAc,CACjB,CACH,CAAC,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC;YAEnC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC3C,WAAW,IAAI,CAAC,CAAC;aACpB;iBAAM;gBACH,WAAW,IAAI,IAAI,CAAC;aACvB;SACJ;aAAM;YACH,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC3C,WAAW,IAAI,CAAC,CAAC;aACpB;iBAAM;gBACH,WAAW,IAAI,IAAI,CAAC;aACvB;SACJ;QACD,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,SAAS,CAAC,QAAQ,iCACX,SAAS,CAAC,KAAK,KAClB,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IACjC,CAAC;IAEH,YAAY,EAAE,CAAC;AACnB,CAAC;AAED,mBAAmB;AACnB,iDAAiD;AAEjD,oBAAoB;AACpB,mBAAmB;AACnB,+BAA+B;AAC/B,+BAA+B;AAC/B,gCAAgC;AAChC,iCAAiC;AACjC,+BAA+B;AAC/B,iCAAiC;AACjC,WAAW;AACX,IAAI;AAEJ,MAAM,SAAS;IACX,YAAmB,KAAK,EAAS,OAAO,IAAI;QAAzB,UAAK,GAAL,KAAK,CAAA;QAAS,SAAI,GAAJ,IAAI,CAAO;IAAG,CAAC;CACnD;AAED,MAAM,UAAU;IACZ,YAAmB,QAAQ,IAAI,EAAS,OAAO,IAAI,EAAS,SAAS,CAAC;QAAnD,UAAK,GAAL,KAAK,CAAO;QAAS,SAAI,GAAJ,IAAI,CAAO;QAAS,WAAM,GAAN,MAAM,CAAI;IAAG,CAAC;IAE1E,OAAO,CAAC,KAAK;QACT,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;QAC/B,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;SACnB;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;SACnB;QACD,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,OAAO,IAAI,CAAA;IACf,CAAC;IAED,OAAO;QACH,IAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,OAAO,IAAI,CAAA;SACd;QACD,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;SACnB;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;QAC5B,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACjB,OAAO,IAAI,CAAA;IACf,CAAC;CACJ;AAED,MAAM,gBAAgB;IAClB,YAAoB,YAAY,EAAS,OAAO,EAAS,QAAQ,IAAI,UAAU,EAAE,EAAS,UAAU,CAAC,YAAY,CAAC,EAAS,gBAAgB,EAAE;QAAzH,iBAAY,GAAZ,YAAY,CAAA;QAAS,YAAO,GAAP,OAAO,CAAA;QAAS,UAAK,GAAL,KAAK,CAAmB;QAAS,YAAO,GAAP,OAAO,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAK;IAAG,CAAC;IAEjJ,mBAAmB;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YAChC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;oBACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAA;iBACxC;aACJ;SACJ;IACL,CAAC;IAED,YAAY;QACR,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAA;SACxC;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;IAC5C,CAAC;IAED,kBAAkB;QACd,OAAO,IAAI,CAAA;IACf,CAAC;IAED,mBAAmB;QACf,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;QACnC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;QAElD,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;QACrC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;QAEpD,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;QACjC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;QAEhD,IAAI,eAAe,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;QACvC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;IAC1D,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;IACjH,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;IACjH,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACnH,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACnH,CAAC;CACJ;AAED,SAAS,YAAY;IACjB,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;IACxC,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;IAEtC,+BAA+B;IAC/B,MAAM,oBAAoB,GAAG,EAAE,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,oBAAoB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QACD,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,MAAM,QAAQ,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC,SAAS,CAC9C,CAAC,WAAW,EAAE,gBAAgB,EAAE,EAAE;QAC9B,IAAI,WAAW,KAAK,CAAC,EAAE;YACnB,OAAO,MAAM,CAAC,gBAAgB,CAAC,CAAC;SACnC;IACL,CAAC,CACJ,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEtB,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,EAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,OAAO,CAAC,CAAA;IAE3E,gBAAgB,CAAC,mBAAmB,EAAE,CAAA;IACtC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAA;IAClD,gBAAgB,CAAC,mBAAmB,EAAE,CAAA;AAE1C,CAAC;AAED,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC","sourcesContent":["console.log(\"I am the client\");\r\n\r\n(async () => {\r\n    const res = await fetch(\"http://localhost:3000/start\");\r\n    console.log(await res.text());\r\n})();\r\n\r\nconst getElement = (el: string) => document.querySelector(el);\r\n\r\nconst domSelectors = {\r\n    mazeContainer: \".maze-container\",\r\n    mazeTemplate: \"#maze-square-template\",\r\n    mazeSize: \".maze-size\",\r\n    mazeSquare: \".maze-square\",\r\n    mazeForm: \".maze-form\",\r\n    mazeSizeDisplay: \".maze-size-display\",\r\n};\r\n\r\ninterface maze {\r\n    size: number;\r\n    mazeArr: string[];\r\n}\r\n\r\n// ADD currying\r\nconst addEvent = (domElement: string, event: string, fn: (e) => void) =>\r\n    getElement(domElement).addEventListener(event, fn);\r\n\r\nconst removeEvent = (domElement: string, event: string, fn: (e) => void) =>\r\n    getElement(domElement).removeEventListener(event, fn);\r\n\r\nconst initialize = function () {\r\n    const addEvents = () => {\r\n        addEvent(domSelectors.mazeSize, \"input\", handleMazeSize);\r\n        addEvent(domSelectors.mazeForm, \"submit\", handleSubmit);\r\n    };\r\n\r\n    const cleanupEvents = () => {\r\n        removeEvent(domSelectors.mazeSize, \"input\", handleMazeSize);\r\n        removeEvent(domSelectors.mazeForm, \"submit\", handleSubmit);\r\n    };\r\n\r\n    return {\r\n        addEvents,\r\n        cleanupEvents,\r\n    };\r\n};\r\n\r\nconst useState = () => {\r\n    let state = {\r\n        size: 10,\r\n        mazeArr: [],\r\n    };\r\n\r\n    return {\r\n        // In order to call 'state' as a prop not as a method\r\n        get state() {\r\n            return state;\r\n        },\r\n        setState: (newMaze: maze) => {\r\n            state = { ...newMaze };\r\n        },\r\n    };\r\n};\r\n\r\nconst mazeState = useState();\r\n\r\nconst handleMazeSize = (e: InputEvent) => {\r\n    const newMaze: maze = {\r\n        size: Number((e.target as HTMLInputElement).value),\r\n        mazeArr: [],\r\n    };\r\n\r\n    mazeState.setState(newMaze);\r\n    document.querySelectorAll(domSelectors.mazeSizeDisplay).forEach((item) => {\r\n        item.textContent = String(mazeState.state.size);\r\n    });\r\n};\r\n\r\nconst handleSubmit = (e: Event) => {\r\n    e.preventDefault();\r\n    const data = new FormData(<HTMLFormElement>e.target);\r\n    const mazeSizeInput = Number(data.get(\"mazeSize\"));\r\n\r\n    if (mazeSizeInput > 16 || mazeSizeInput < 8 || !String(mazeSizeInput)) {\r\n        return;\r\n    }\r\n\r\n    createMaze();\r\n};\r\n\r\nfunction createMaze() {\r\n    const container = getElement(domSelectors.mazeContainer) as HTMLElement;\r\n\r\n    if (container.children.length) {\r\n        container.innerHTML = \"\";\r\n    }\r\n\r\n    container.style.gridTemplateColumns = `repeat(${mazeState.state.size}, 1fr)`;\r\n    container.style.gridTemplateRows = `repeat(${mazeState.state.size}, 1fr)`;\r\n\r\n    const template = getElement(\r\n        domSelectors.mazeTemplate\r\n    ) as HTMLTemplateElement;\r\n\r\n    let rowBooleans = \"\";\r\n\r\n    for (let i = 0; i < Math.pow(mazeState.state.size, 2); i++) {\r\n        const templateCopy = template.content.cloneNode(true);\r\n\r\n        if (Math.round(Math.random())) {\r\n            (<HTMLDivElement>(\r\n                (<HTMLTemplateElement>templateCopy).querySelector(\r\n                    \".maze-square\"\r\n                )\r\n            )).style.backgroundColor = \"black\";\r\n\r\n            if (i % mazeState.state.size !== 0 || i === 0) {\r\n                rowBooleans += 0;\r\n            } else {\r\n                rowBooleans += \" 0\";\r\n            }\r\n        } else {\r\n            if (i % mazeState.state.size !== 0 || i === 0) {\r\n                rowBooleans += 1;\r\n            } else {\r\n                rowBooleans += \" 1\";\r\n            }\r\n        }\r\n        container.appendChild(templateCopy);\r\n    }\r\n\r\n    mazeState.setState({\r\n        ...mazeState.state,\r\n        mazeArr: rowBooleans.split(\" \"),\r\n    });\r\n\r\n    validateMaze();\r\n}\r\n\r\n// Compose dir type\r\n// type dirT = Record<string, unknown> | boolean;\r\n\r\n// class NodeClass {\r\n//     constructor(\r\n//         public posX: number,\r\n//         public posY: number,\r\n//         public dirLeft: dirT,\r\n//         public dirRight: dirT,\r\n//         public dirTop: dirT,\r\n//         public dirBottom: dirT\r\n//     ) {}\r\n// }\r\n\r\nclass NodeClass {\r\n    constructor(public value, public next = null) {}\r\n}\r\n\r\nclass QueueClass {\r\n    constructor(public first = null, public last = null, public length = 0) {}\r\n\r\n    enqueue(value) {\r\n        let node = new NodeClass(value)\r\n        if(this.length === 0) {\r\n            this.first = node\r\n            this.last = node\r\n        } else {\r\n            this.last.next = node\r\n            this.last = node\r\n        }\r\n        this.length++\r\n        console.log(this)\r\n        return this\r\n    }\r\n\r\n    dequeue() {\r\n        if(this.length === 0) {\r\n            return null\r\n        } \r\n        if (this.first === this.last) {\r\n            this.last = null\r\n        }\r\n        this.first = this.first.next \r\n        this.length--\r\n        console.log(this)\r\n        return this\r\n    }\r\n}\r\n\r\nclass TraversalManager {\r\n    constructor (public currentPoint, public mazeArr, public queue = new QueueClass(), public visited = [currentPoint], public validVertices = []) {}\r\n\r\n    createValidVertices() {\r\n        for (let i = 0; i < this.mazeArr.length; i++) {\r\n            let currentRow = this.mazeArr[i]\r\n            for(let j = 0; j < currentRow.length; j++) {\r\n                if(Number(currentRow[j])) {\r\n                    this.validVertices.push({x: j, y: i})\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeVertex() {\r\n        if(this.visited.length > 1) {\r\n            this.visited.push = this.currentPoint\r\n        }\r\n\r\n        this.currentPoint = this.queue.dequeue()\r\n    }\r\n\r\n    getTraversalStatus() {\r\n        return this\r\n    }\r\n\r\n    getNeighborVertices() {\r\n        let leftNeighbour = this.findLeft()\r\n        leftNeighbour && this.queue.enqueue(leftNeighbour)\r\n\r\n        let rightNeighbour = this.findRight()\r\n        rightNeighbour && this.queue.enqueue(rightNeighbour)\r\n\r\n        let topNeighbour = this.findTop()\r\n        topNeighbour && this.queue.enqueue(topNeighbour)\r\n\r\n        let bottomNeighbour = this.findBottom()\r\n        bottomNeighbour && this.queue.enqueue(bottomNeighbour)\r\n    }\r\n\r\n    findLeft() {\r\n        return this.validVertices.find(point => point.x === this.currentPoint.x-1 && point.y === this.currentPoint.y)\r\n    }\r\n\r\n    findRight() {\r\n        return this.validVertices.find(point => point.x === this.currentPoint.x+1 && point.y === this.currentPoint.y)\r\n    }\r\n\r\n    findTop() {\r\n        return this.validVertices.find(point => point.x === this.currentPoint.x && point.y === this.currentPoint.y - 1)\r\n    }\r\n\r\n    findBottom() {\r\n        return this.validVertices.find(point => point.x === this.currentPoint.x && point.y === this.currentPoint.y + 1)\r\n    }\r\n}\r\n\r\nfunction validateMaze() {\r\n    const mazeArr = mazeState.state.mazeArr;\r\n    const mazeSize = mazeState.state.size;\r\n\r\n    // Build arr of open and closed\r\n    const multidimensionalMaze = [];\r\n    for (let i = 0; i < mazeArr.length; i++) {\r\n        multidimensionalMaze[i] = [];\r\n        for (let j = 0; j < mazeArr[i].length; j++) {\r\n            multidimensionalMaze[i].push(Number(mazeArr[i][j]));\r\n        }\r\n        multidimensionalMaze.push(multidimensionalMaze[i]);\r\n    }\r\n\r\n    const initPosX = multidimensionalMaze[0].findIndex(\r\n        (emptySquare, emptySquareIndex) => {\r\n            if (emptySquare === 1) {\r\n                return String(emptySquareIndex);\r\n            }\r\n        }\r\n    );\r\n\r\n    console.log(initPosX);\r\n\r\n    const traversalManager = new TraversalManager({x: initPosX, y: 0}, mazeArr)\r\n\r\n    traversalManager.createValidVertices()\r\n    console.log(traversalManager.getTraversalStatus())\r\n    traversalManager.getNeighborVertices()\r\n\r\n}\r\n\r\ninitialize().addEvents();\r\n"]}